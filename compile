#!/bin/bash

CPTOOL_DIR=`dirname $0`

print_usage() {
  echo "Compile"
  echo "  compile competitive programming solution."
  echo "Usage: cptool compile [OPTION]... [LANGUAGE] SOLUTION"
	echo "Available commands:"
	echo "  -h --help    Show this help screen."
  echo "  --version    Show version."
  echo "  -d --debug   Compile using debug mode"
}

print_version() {
  echo `cat $CPTOOL_DIR/VERSION`
}

check_is_language_folder() {
  if [ -f "$1/lang.conf" ] && [ -f "$1/compile" ] && [ -f "$1/run" ]; then
    return 0
  else
    return 1
  fi
}

compile_solution() {
  local debug="$1"
  local language="$2"
  local solution="$3"
  for lang_folder in "$CPTOOL_DIR"/langs/*
  do
    check_is_language_folder "$lang_folder"
    if [ $? -eq 0 ]; then
      source "$lang_folder/lang.conf"
      if [ -z "$name" ]; then
        local name=`basename "$lang_folder"`
      fi
      if [ -z "$shortname" ]; then
        local shortname="$name";
      fi
      if [ -z "$extension" ]; then
        local extension="$shortname"
      fi

      local current_source_code="$solution.$extension"

      if [ "$name" = "$language" ]; then
        if [ ! -f $current_source_code ]; then
          echo "Error compiling solution: file $current_source_code not found"
          exit 1
        fi
        
        local compile_script="$lang_folder/compile"
        if [ $debug = true ]; then
          if [ ! -f "$lang_folder/debugcompile" ]; then
            echo "Warning compiling solution: language doesn't have debug compile script, use default compile instead"
            local debug=false
          else
            local compile_script="$lang_folder/debugcompile"
          fi
        fi

        local DEST=".cptool/$solution"
        if [ $debug = true ]; then
          local DEST="${DEST}_test"
        fi
        local SOURCE="$current_source_code"
        mkdir -p `dirname $DEST`

        if [ "$DEST" -nt "$SOURCE" ]; then
          echo "Skip compiling solution: no change in solution"
          exit 0
        fi

        eval "DEST=\"$DEST\" SOURCE=\"$SOURCE\" $compile_script"
        if [ $? -eq 0 ]; then
          echo "Success compiling solution: $solution"
          exit 0
        else
          echo "Error compiling solution: compilation script failed"
          exit 1
        fi
      fi
    fi
  done

  echo "Error compiling solution: language definition doesn't exists"
  exit 1
}

DEFAULT_LANGUAGE="cpp"

DEBUG=false
LANGUAGE=""
SOLUTION=""

parsing_options=true
for arg in "$@"
do
  if [ $parsing_options = true ]; then
    if [ $arg = "-h" ] || [ $arg = "--help" ]; then
      print_usage
      exit $?
    elif [ $arg = "--version" ]; then
      print_version
      exit $?
    elif [ $arg = "-d" ] || [ $arg = "--debug" ]; then
      DEBUG=true
    else
      parsing_options=false
      LANGUAGE=$arg
    fi
  elif [ -z "$SOLUTION" ]; then
    SOLUTION=$arg
  else
    print_usage
    exit 1
  fi
done

if [ -z "$LANGUAGE" ]; then
  echo "Error: please specify solution name."
  print_usage
  exit 1
elif [ -z "$SOLUTION" ]; then
  SOLUTION="$LANGUAGE"
  LANGUAGE="$DEFAULT_LANGUAGE"
fi

compile_solution "$DEBUG" "$LANGUAGE" "$SOLUTION"
